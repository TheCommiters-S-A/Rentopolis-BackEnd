plugins {
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.sonarqube" version "3.1.1"
	id 'application'
    id 'jacoco'
}

group = 'edu.eci.ieti'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.7'

	// https://mvnrepository.com/artifact/org.springframework/spring-context
	implementation group: 'org.springframework', name: 'spring-context', version: '5.3.3'

	// https://mvnrepository.com/artifact/de.flapdoodle.embed/de.flapdoodle.embed.mongo
	testImplementation group: 'de.flapdoodle.embed', name: 'de.flapdoodle.embed.mongo', version: '2.2.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.4.2'
	
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot
	compile group: 'org.springframework.boot', name: 'spring-boot', version: '2.4.2'

}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
	reports {
		xml.enabled true
		xml.destination
		file("${rootProject.projectDir}/build/reports/jacoco/report.xml")
	}
}


sonarqube {
	properties {
		property "sonar.projectKey", "TheCommiters-S-A_Rentopolis-BackEnd"
		property "sonar.organization", "thecommiters-s-a"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}


